{"version":3,"sources":["redux/actions.js","redux/reducers.js","components/Author.js","components/AuthorHandler.js","components/ToolButtons.js","components/ToolButtonsHandler.js","App.js","serviceWorker.js","index.js"],"names":["LOAD","DISPLAY","SELECT","MOVE_SELECTION_UP","MOVE_SELECTION_DOWN","EDIT","DELETE","APPLY_EDIT","CANCEL_EDIT","load","dispatch","type","xhr","XMLHttpRequest","open","responseType","addEventListener","authorsList","response","display","send","getCancelAction","initialState","requested","selectedIndex","inEdit","swap","lst","i1","i2","newLst","slice","_newLst$splice","splice","removedItem","Object","slicedToArray","deleteItem","index","Author","props","ul","map","author","i","react_default","a","createElement","key","defaultValue","onKeyDown","event","inputHandler","className","onClick","authorClick","AuthorHandler","connect","state","inputValue","target","value","ToolButtons","disabled","loadDisabled","loadLabel","up","authorsLength","down","edit","editDisabled","delete","ToolButtonsHandler","length","cancel","store","createStore","arguments","undefined","action","objectSpread","newAuthors","applyMiddleware","thunk","App","es","components_ToolButtonsHandler","components_AuthorHandler","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aef01da6.chunk.js","sourcesContent":["export const LOAD = 'load';\nexport const DISPLAY = 'display';\nexport const SELECT = 'authors_select';\nexport const MOVE_SELECTION_UP = 'move_selection_up';\nexport const MOVE_SELECTION_DOWN = 'move_selection_down';\nexport const EDIT = 'authors_edit';\nexport const DELETE = 'authors_delete';\nexport const APPLY_EDIT = 'authors_apply_edit';\nexport const CANCEL_EDIT = 'authors_cancel_edit';\n\nexport function load() {\n  return (dispatch) => {\n    dispatch({\n      type: LOAD\n    });\n\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', 'https://my-json-server.typicode.com/mate-academy/literary-blog/authors');\n    xhr.responseType = 'json';\n    xhr.addEventListener('load', () => {\n        const authorsList = xhr.response;\n        dispatch(display(authorsList));\n    });\n    xhr.send();\n  };\n}\n\nexport function display(authorsList) {\n  return {\n    type: DISPLAY,\n    authorsList\n  };\n}\n\nexport function getSelectAction(index) {\n  return {\n    type: SELECT,\n    index\n  };\n}\n\nexport function moveSelectionUp()  {\n  return {\n    type: MOVE_SELECTION_UP,\n  };\n};\n\nexport function moveSelectionDown() {\n  return {\n    type: MOVE_SELECTION_DOWN,\n  };\n};\nexport function getEditAction() {\n  return {\n    type: EDIT\n  };\n}\n\nexport function getDeleteAction() {\n  return {\n    type: DELETE\n  };\n}\n\nexport function getApplyAction(inputValue) {\n  return {\n    type: APPLY_EDIT,\n    inputValue\n  };\n}\n\nexport function getCancelAction() {\n  return {\n    type: CANCEL_EDIT,\n  };\n}\n","import {DISPLAY, LOAD, SELECT,\n  MOVE_SELECTION_UP, MOVE_SELECTION_DOWN,\n  EDIT, DELETE, APPLY_EDIT, CANCEL_EDIT} from \"./actions\";\n\nconst initialState = {\n  requested: false,\n  authorsList: null,\n  selectedIndex: -1,\n  inEdit: false\n};\n\nfunction swap(lst, i1, i2) {\n  const newLst = lst.slice();\n  const [removedItem] = newLst.splice(i2, 1);\n  newLst.splice(i1, 0, removedItem);\n  return newLst;\n}\n\nfunction deleteItem(lst, index) {\n  const newLst = lst.slice();\n  newLst.splice(index, 1);\n  return newLst;\n}\nexport function getNextState(state = initialState, action) {\n  switch (action.type) {\n    case LOAD:\n      return {\n        ...state,\n        requested: true\n      };\n    case DISPLAY:\n      return {\n        ...state,\n        authorsList: action.authorsList,\n        requested: false\n      };\n    case SELECT:\n      return {\n        ...state,\n        selectedIndex: +(action.index)\n      };\n    case MOVE_SELECTION_UP:\n      return {\n        ...state,\n        authorsList: swap(state.authorsList, state.selectedIndex - 1, state.selectedIndex),\n        selectedIndex: state.selectedIndex - 1\n      };\n    case MOVE_SELECTION_DOWN:\n      return {\n        ...state,\n        authorsList: swap(state.authorsList, state.selectedIndex + 1, state.selectedIndex),\n        selectedIndex: state.selectedIndex + 1\n      };\n    case EDIT:\n      return {\n        ...state,\n        inEdit: true\n      };\n    case APPLY_EDIT:\n      let newAuthors = state.authorsList;\n        if (action.inputValue === '') {\n            newAuthors.splice(state.selectedIndex, 1);\n          } else {\n            newAuthors[state.selectedIndex] = action.inputValue;\n          }\n          return {\n            ...state,\n            authorsList: newAuthors,\n            inEdit: false,\n            selectedIndex: -1\n          };\n    case CANCEL_EDIT:\n      return {\n        ...state,\n        inEdit: false\n      };\n    case DELETE:\n      return {\n        ...state,\n        authorsList: deleteItem(state.authorsList, state.selectedIndex),\n        selectedIndex: state.selectedIndex - 1\n      };\n\n    default:\n    return state;\n  }\n  // return state;\n}\n","import React from 'react';\nimport './Author.css';\n\nfunction Author(props) {\n  if (props.authorsList === null) {\n    return null;\n  }\n  const ul = props.authorsList.map((author, i) => {\n    if (i === props.selectedIndex) {\n      if (props.inEdit) {\n        return (<li key={i}><input defaultValue={author} onKeyDown={(event) => props.inputHandler(event)}/></li>);\n      } else {\n        return (<li className='selected' key={i} onClick={() => props.authorClick(i)}>{author}</li>);\n      }\n    } else {\n      return (<li key={i} onClick={() => props.authorClick(i)}>{author}</li>);\n    }\n  });\n  return <ul className=\"container\">{ul}</ul>;\n}\n\nexport default Author;\n","import Author from \"./Author\";\nimport {connect} from \"react-redux\";\nimport {getSelectAction, getApplyAction, getCancelAction} from \"../redux/actions\";\n\nfunction mapStateToProps(state) {\n  return {\n    authorsList: state.authorsList,\n    selectedIndex: state.selectedIndex,\n    inEdit: state.inEdit\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    authorClick: i => dispatch(getSelectAction(i)),\n    inputHandler: (event)=> {\n      if (event.key === 'Enter') {\n        dispatch(getApplyAction(event.target.value));\n      } else if (event.key === 'Escape') {\n        dispatch(getCancelAction());\n      }\n   },\n  };\n}\n\nconst AuthorHandler = connect(mapStateToProps, mapDispatchToProps)(Author);\n\nexport default AuthorHandler;\n","import React from 'react';\nimport './ToolButtons.css';\n\nconst ToolButtons = (props) => {\n  return (\n    <div className=\"panel\">\n      <button\n        onClick={() => props.load()}\n        disabled={props.loadDisabled}\n      >{props.loadLabel}\n      </button>\n      <button\n        onClick={() => props.up(props.index)}\n        disabled={props.index === 0\n          || props.index === null\n          || props.authorsLength === 0}\n      >Move Up\n      </button>\n      <button\n        onClick={() => props.down(props.index)}\n        disabled={props.index === props.authorsLength - 1\n          || props.index === null\n          || props.authorsLength === 0}\n      >Move Down\n      </button>\n      <button\n        onClick={() => props.edit(props.index)}\n        disabled={props.editDisabled}\n      >Edit\n      </button>\n      <button\n        onClick={() => props.delete(props.index)}\n        disabled={props.editDisabled}\n      >Delete\n      </button>\n    </div>\n  );\n};\n\nexport default ToolButtons;\n","import {connect} from 'react-redux';\nimport ToolButtons from \"./ToolButtons\";\nimport {moveSelectionDown, moveSelectionUp,\n  getEditAction, getDeleteAction, getCancelAction, load} from \"../redux/actions\";\n\nfunction mapStateToProps(state) {\n  return {\n    loadLabel: (state.requested) ? 'Loading...' : 'Load',\n    loadDisabled: (state.authorsList !== null || state.requested),\n    index: state.selectedIndex,\n    authorsLength: (state.authorsList === null) ? 0 : state.authorsList.length,\n    editDisabled: state.selectedIndex < 0\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    load:() => dispatch(load()),\n    up: index => dispatch(moveSelectionUp(index)),\n    down: index => dispatch(moveSelectionDown(index)),\n    edit: index => dispatch(getEditAction(index)),\n    delete: index => dispatch(getDeleteAction(index)),\n    cancel: dispatch(getCancelAction())\n  };\n}\n\nconst ToolButtonsHandler = connect(mapStateToProps, mapDispatchToProps)(ToolButtons);\n\nexport default ToolButtonsHandler;\n","import React from 'react';\nimport './App.css';\nimport {applyMiddleware, createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport {getNextState} from \"./redux/reducers\";\nimport AuthorHandler from \"./components/AuthorHandler\";\nimport ToolButtonsHandler from \"./components/ToolButtonsHandler\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(getNextState, applyMiddleware(thunk));\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ToolButtonsHandler />\n      <AuthorHandler />\n    </Provider>  \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets;\n      // see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost.\n        // Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}